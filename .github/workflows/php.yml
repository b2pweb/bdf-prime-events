name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.1', '7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Set Timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Europe/Paris"
    
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: json
        ini-values: date.timezone=Europe/Paris
    - name: Check PHP Version
      run: php -v

    - name: Install MySQL
      run: >
        docker pull mottox/mysql-replication;
        docker run --name master -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -e MYSQL_ROOT_HOST=% -e SERVER_ID=1 -d mottox/mysql-replication;
#      uses: mirromutth/mysql-action@v1.1
#      with:
#        mysql root password: ''
#        mysql user: 'test_events'
#        mysql password: 'password'

    - name: Configure databases and users
      run: >
        docker exec -it master mysql -u root -e "create database test";
        docker exec -it master mysql -u root -e "create user test_events IDENTIFIED BY 'password'";
        docker exec -it master mysql -u root -e "grant all privileges on test.* to test_events";
        docker exec -it master mysql -u root -e "grant replication slave, replication client on *.* to test_events";
        docker exec -it master mysql -u root -e "create database other";
        docker exec -it master mysql -u root -e "create user other_user IDENTIFIED BY 'other_pass'";
        docker exec -it master mysql -u root -e "grant all privileges on other.* to other_user";
        docker exec -it master mysql -u root -e "grant replication slave, replication client on *.* to other_user";

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run test suite
      run: composer run-script tests
#
#  analysis:
#    name: Analysis
#    runs-on: ubuntu-latest
#    env:
#      ELASTICSEARCH_HOST: "127.0.0.1:9200"
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Set Timezone
#      uses: szenius/set-timezone@v1.0
#      with:
#        timezoneLinux: "Europe/Paris"
#
#    - name: Install PHP
#      uses: shivammathur/setup-php@v2
#      with:
#        php-version: 7.4
#        extensions: json
#        ini-values: date.timezone=Europe/Paris
##
##    - name: Install Infection
##      run: composer global require infection/infection
#
#    - name: Validate composer.json and composer.lock
#      run: composer validate --strict
#
#    - name: Install dependencies
#      run: composer install --prefer-dist --no-progress
#
#    - name: Run type coverage
#      run: composer run-script psalm

#    - name: Run Infection
#      run: |
#        git fetch --depth=1 origin $GITHUB_BASE_REF
#        ~/.composer/vendor/bin/infection --logger-github --git-diff-filter=AM
